<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HARMVIS - AI Book Finder</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }
        
        body {
            background-color: #f3f4f6;
            color: #333;
        }
        
        .navbar {
            padding: 15px;
            background-color: #1a73e8;
            text-align: center;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
        }
        
        .navbar a {
            color: white;
            margin: 0 15px;
            text-decoration: none;
            font-weight: bold;
            transition: all 0.3s ease;
        }
        
        .navbar a:hover {
            text-decoration: underline;
            opacity: 0.8;
        }
        
        .chat-container {
            width: 90%;
            max-width: 900px;
            margin: 80px auto 30px;
            padding: 20px;
            background: #fff;
            border-radius: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        
        .chat-header {
            font-size: 1.8em;
            margin-bottom: 20px;
            color: #333;
            text-align: center;
            font-weight: bold;
        }
        
        .chat-body {
            margin: 5px;
            padding: 15px;
            max-height: 600px;
            overflow-y: auto;
            border: 1px solid #ddd;
            border-radius: 10px;
            background: #fafafa;
        }
        
        .message {
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 15px;
            width: 85%;
            animation: fadeIn 0.3s ease-in;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .user-message {
            background-color: #e3f2fd;
            text-align: right;
            margin-left: auto;
            border-bottom-right-radius: 5px;
        }
        
        .bot-message {
            background-color: #fff;
            text-align: left;
            border-bottom-left-radius: 5px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }
        
        .book-card {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            margin: 10px 0;
            background: #fff;
            transition: transform 0.2s ease;
        }
        
        .book-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        
        .book-title {
            font-weight: bold;
            color: #1a73e8;
            margin-bottom: 5px;
        }
        
        .book-author {
            color: #666;
            font-size: 0.9em;
            margin-bottom: 10px;
        }
        
        .book-description {
            font-size: 0.95em;
            line-height: 1.5;
            margin-bottom: 15px;
        }
        
        .action-buttons {
            display: flex;
            gap: 10px;
        }
        
        .buy-button, .wishlist-button {
            padding: 8px 15px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s ease;
        }
        
        .buy-button {
            background-color: #4CAF50;
            color: white;
        }
        
        .buy-button:hover {
            background-color: #45a049;
        }
        
        .wishlist-button {
            background-color: #1a73e8;
            color: white;
        }
        
        .wishlist-button:hover {
            background-color: #1557b0;
        }
        
        .input-area {
            display: flex;
            padding: 15px 0;
            gap: 10px;
        }
        
        .input-area input {
            flex: 1;
            padding: 12px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }
        
        .input-area input:focus {
            outline: none;
            border-color: #1a73e8;
        }
        
        .input-area button {
            padding: 12px 25px;
            background-color: #1a73e8;
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: bold;
            transition: background-color 0.3s ease;
        }
        
        .input-area button:hover {
            background-color: #1557b0;
        }

        .success-toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: #4CAF50;
            color: white;
            padding: 15px 25px;
            border-radius: 8px;
            display: none;
            animation: slideIn 0.3s ease-out;
        }

        @keyframes slideIn {
            from { transform: translateX(100%); }
            to { transform: translateX(0); }
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
</head>
<body>
    <div class="navbar">
        <a href="/home">Home</a>
        <a href="/wishlist">Wishlist</a>
        <a href="/profile">Profile</a>
        <a href="/login">Login</a>
    </div>

    <div class="chat-container">
        <div class="chat-header">AI Book Finder</div>
        <div class="chat-body" id="chatBody">
            <div class="bot-message">What kind of book are you looking for? I can help you find books based on genres, themes, or specific interests!</div>
        </div>
        <div class="input-area">
            <input type="text" id="promptInput" placeholder="Type your book interests here..." />
            <button id="sendButton">Send</button>
        </div>
    </div>

    <div id="successToast" class="success-toast">
        Added to wishlist successfully!
    </div>

    <script>
        function parseBookDetails(text) {
            const books = [];
            const lines = text.split('\n');
            let currentBook = {};
            
            for (let line of lines) {
                if (line.match(/^\d+\./)) {
                    if (Object.keys(currentBook).length > 0) {
                        books.push(currentBook);
                    }
                    currentBook = {
                        title: line.replace(/^\d+\.\s*/, '').split(' by ')[0].trim(),
                        author: line.split(' by ')[1]?.trim() || 'Unknown Author',
                        description: ''
                    };
                } else if (line.trim() !== '') {
                    if (currentBook.description) {
                        currentBook.description += ' ' + line.trim();
                    } else {
                        currentBook.description = line.trim();
                    }
                }
            }
            
            if (Object.keys(currentBook).length > 0) {
                books.push(currentBook);
            }
            
            return books;
        }

        function createBookCard(book) {
            return `
                <div class="book-card">
                    <div class="book-title">${book.title}</div>
                    <div class="book-author">by ${book.author}</div>
                    <div class="book-description">${book.description}</div>
                    <div class="action-buttons">
                        <button class="buy-button" onclick="window.open('https://www.amazon.com/s?k=${encodeURIComponent(book.title )}', '_blank')">Buy now</button>
                        <button class="wishlist-button" onclick="addToWishlist('${book.title} by ${book.author}')">Add to Wishlist</button>
                    </div>
                </div>
            `;
        }

        function showToast() {
            const toast = document.getElementById('successToast');
            toast.style.display = 'block';
            setTimeout(() => {
                toast.style.display = 'none';
            }, 3000);
        }

        function addToWishlist(bookInfo) {
            let wishlist = JSON.parse(localStorage.getItem('wishlist')) || [];
            if (!wishlist.includes(bookInfo)) {
                wishlist.push(bookInfo);
                localStorage.setItem('wishlist', JSON.stringify(wishlist));
                showToast();
            }
        }

        document.getElementById('sendButton').addEventListener('click', async () => {
            const input = document.getElementById('promptInput');
            const userMessage = input.value;
            
            if (userMessage) {
                const chatBody = document.getElementById('chatBody');
                chatBody.innerHTML += `<div class="message user-message">${userMessage}</div>`;
                input.value = '';
                
                let query = "Suggest 3-5 books related to " + userMessage + ". For each book, provide the title, author, and a brief description. Format: 1. Title by Author - Description";
                
                try {
                    const response = await fetch('/generate', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ prompt: query })
                    });
                    
                    const data = await response.json();
                    const botMessage = data.response.parts[0].text;
                    const books = parseBookDetails(botMessage);
                    
                    let bookCardsHtml = '<div class="message bot-message">';
                    books.forEach(book => {
                        bookCardsHtml += createBookCard(book);
                    });
                    bookCardsHtml += '</div>';
                    
                    chatBody.innerHTML += bookCardsHtml;
                    chatBody.scrollTop = chatBody.scrollHeight;
                } catch (error) {
                    console.error('Error:', error);
                    chatBody.innerHTML += `<div class="message bot-message">Sorry, I encountered an error. Please try again.</div>`;
                }
            }
        });

        // Add enter key support
        document.getElementById('promptInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                document.getElementById('sendButton').click();
            }
        });
    </script>
</body>
</html>
<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HARMVIS - AI Book Finder</title>
    <style>
        * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: Arial, sans-serif;
  }
  
  
  
  body {
      background-color: #f3f4f6;
      color: #333;
  }
  
  .navbar {
      padding: 15px;
      background-color: #1a73e8;
      text-align: center;
  }
  
  .navbar a {
      color: white;
      margin: 0 15px;
      text-decoration: none;
      font-weight: bold;
  }
  
  .navbar a:hover {
      text-decoration: underline;
  }
  
  .container {
      max-width: 600px;
      margin: 50px auto;
      padding: 20px;
      background: #fff;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }
  
  .chat-container {
      width: 90%;
      max-width: 750px;
      margin: 50px auto;
      padding: 20px;
      background: #fff;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }
  ul > li {
    list-style: none;
  }
  ul , ol{
    margin-left: 20px;
  }
 
  .chat-header {
      font-size: 1.5em;
      margin-bottom: 20px;
      color: #333;
      text-align: center;
  }
  
  .chat-body {
      margin: 5px;
      padding: 15px;
      max-height: 300px;
      overflow-y: auto;
      border: 1px solid #ddd;
      border-radius: 5px;
  }
  
  .message {
      padding: 10px;
      border-radius: 5px;
      margin-bottom: 10px;
      width: 80%;
  }
  
  .user-message {
      background-color: #e6f3ff;
      text-align: right;
      margin-left: auto;
  }
  
  .bot-message {
      background-color: #f1f3f4;
      text-align: left;
  }
  
  .input-area {
      display: flex;
      padding: 10px 0;
  }
  
  .input-area input {
      flex: 1;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 5px;
      margin-right: 10px;
  }
  
  .input-area button {
      padding: 10px;
      background-color: #1a73e8;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
  }
  
      </style>
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
</head>
<body>
    <div class="navbar">
        <a href="/home">Home</a>
        <a href="/wishlist">Wishlist</a>
        <a href="/profile">Profile</a>
        <a href="/login">Login</a>
    </div>

    <div class="chat-container">
        <div class="chat-header">AI Book Finder</div>
        <div class="chat-body" id="chatBody">
            <div class="bot-message">What kind of book are you looking for?</div>
        </div>
        <div class="input-area">
            <input type="text" id="promptInput" placeholder="Type your message here..." />
            <button id="sendButton">Send</button>
        </div>
    </div>


    <script>
        function convertMarkdown(botMessage) {
            const htmlOutput = marked.parse(botMessage);
            chatBody.innerHTML += htmlOutput;
            showAddToWishlistButton(botMessage);
        }

        function showAddToWishlistButton(bookTitle) {
            // Create Add to Wishlist Button
            const chatBody = document.getElementById('chatBody');
            const wishlistButton = document.createElement('button');
            wishlistButton.innerText = 'Add to Wishlist';
            wishlistButton.id = 'wishlistButton';
            wishlistButton.onclick = function() {
                addToWishlist(bookTitle);
            };
            
            // Append the button below the book suggestion
            chatBody.innerHTML += '<br>';
            chatBody.appendChild(wishlistButton);
        }

        function addToWishlist(bookTitle) {
            // Retrieve existing wishlist or create a new one
            let wishlist = JSON.parse(localStorage.getItem('wishlist')) || [];
            // Add book to wishlist
            wishlist.push(bookTitle);
            localStorage.setItem('wishlist', JSON.stringify(wishlist));

            // Debugging: Check what's added to localStorage
            console.log('Updated wishlist:', wishlist);
            alert("Book successfully added to wishlist!");
            // Show popup notification
            showPopup();
        }

        function showPopup() {
            const popup = document.getElementById('popup');
            popup.style.display = 'block';
            setTimeout(() => {
                popup.style.display = 'none';
            }, 2000);
        }

        document.getElementById('sendButton').addEventListener('click', async () => {
            const input = document.getElementById('promptInput');
            const userMessage = input.value;
            
            if (userMessage) {
                const chatBody = document.getElementById('chatBody');
                chatBody.innerHTML += `<div class="message user-message">${userMessage}</div>`;
                input.value = '';
                let query = "Suggest me some books related to the topic of " + userMessage + " and give the result in english. Also do not include 'sure,here are the...' and stuff like that, just give me pure output."
                const response = await fetch('/generate', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ prompt: query })
                });
                const data = await response.json();
                const botMessage = data.response.parts[0].text;
                console.log(data);
                convertMarkdown(botMessage);
            }
        });
    </script>
</body>
</html> -->

